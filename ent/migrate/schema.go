// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// InvestmentsColumns holds the columns for the "investments" table.
	InvestmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "relation", Type: field.TypeString, Size: 2147483647},
		{Name: "date", Type: field.TypeTime},
		{Name: "amount", Type: field.TypeInt64},
		{Name: "payment_method", Type: field.TypeString, Size: 2147483647},
		{Name: "remarks", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "portfolio_investments", Type: field.TypeInt, Nullable: true},
	}
	// InvestmentsTable holds the schema information for the "investments" table.
	InvestmentsTable = &schema.Table{
		Name:       "investments",
		Columns:    InvestmentsColumns,
		PrimaryKey: []*schema.Column{InvestmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "investments_portfolios_investments",
				Columns:    []*schema.Column{InvestmentsColumns[10]},
				RefColumns: []*schema.Column{PortfoliosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PortfoliosColumns holds the columns for the "portfolios" table.
	PortfoliosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "admin_name", Type: field.TypeString, Size: 2147483647},
		{Name: "date", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// PortfoliosTable holds the schema information for the "portfolios" table.
	PortfoliosTable = &schema.Table{
		Name:       "portfolios",
		Columns:    PortfoliosColumns,
		PrimaryKey: []*schema.Column{PortfoliosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "portfolios_users_portfolios",
				Columns:    []*schema.Column{PortfoliosColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "share_name", Type: field.TypeString, Size: 2147483647},
		{Name: "date", Type: field.TypeTime},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "price", Type: field.TypeInt},
		{Name: "trans_type", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "portfolio_transactions", Type: field.TypeInt, Nullable: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_portfolios_transactions",
				Columns:    []*schema.Column{TransactionsColumns[8]},
				RefColumns: []*schema.Column{PortfoliosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString, Size: 2147483647},
		{Name: "middle_name", Type: field.TypeString, Size: 2147483647},
		{Name: "last_name", Type: field.TypeString, Size: 2147483647},
		{Name: "email", Type: field.TypeString, Size: 2147483647},
		{Name: "username", Type: field.TypeString, Size: 2147483647},
		{Name: "phone", Type: field.TypeString, Size: 2147483647},
		{Name: "password", Type: field.TypeString, Size: 2147483647},
		{Name: "user_type", Type: field.TypeString, Size: 2147483647},
		{Name: "google_id", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		InvestmentsTable,
		PortfoliosTable,
		TransactionsTable,
		UsersTable,
	}
)

func init() {
	InvestmentsTable.ForeignKeys[0].RefTable = PortfoliosTable
	PortfoliosTable.ForeignKeys[0].RefTable = UsersTable
	TransactionsTable.ForeignKeys[0].RefTable = PortfoliosTable
}
